package com.comexport.usuario;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.IdClass;

import java.util.Date;
import java.util.stream.Stream;

import org.springframework.boot.CommandLineRunner;
import org.springframework.cloud.client.discovery.EnableDiscoveryClient;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.rest.core.annotation.RepositoryRestResource;
import org.springframework.stereotype.Component;
import lombok.Data;
import lombok.AllArgsConstructor;
import lombok.NoArgsConstructor;
import lombok.ToString;

@Data
@AllArgsConstructor
@NoArgsConstructor
@ToString
@Entity
class User {

    public User(String name, String email, Date birthdate, Date createdat, Date updatedat, Byte enabled, Long role_id) {
        this.name = name;
    }

    @Id
    private Long id;

    private String name;
    
    private String email;
    
    private Date birthdate;
    
    private Date createdat;
    
    private Date updatedat;
    
    private Byte enabled;
    
    private Long role_id;
}

@RepositoryRestResource
interface UserRepository extends JpaRepository<User, Long> {}

@Component
class UserInitializer implements CommandLineRunner {

    private final UserRepository UserRepository;

    ItemInitializer(ItemRepository itemRepository) {
        this.itemRepository = itemRepository;
    }

    @Override
    public void run(String... args) throws Exception {
        Stream.of(""Lining", "PUMA", "Bad Boy", "Air Jordan", "Nike", "Adidas", "Reebok")
                .forEach(item -> itemRepository.save(new Item(item)));

        itemRepository.findAll().forEach(System.out::println);
    }
}


@SpringBootApplication
public class UsuarioCadastroApplication {
	
	public static void main(String[] args) {
		SpringApplication.run(UsuarioCadastroApplication.class, args);
	}

}
